package com.jf.model;

import java.util.ArrayList;
import java.util.List;

public class JFGroupMarkExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public JFGroupMarkExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andStuIdIsNull() {
            addCriterion("stu_id is null");
            return (Criteria) this;
        }

        public Criteria andStuIdIsNotNull() {
            addCriterion("stu_id is not null");
            return (Criteria) this;
        }

        public Criteria andStuIdEqualTo(String value) {
            addCriterion("stu_id =", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotEqualTo(String value) {
            addCriterion("stu_id <>", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdGreaterThan(String value) {
            addCriterion("stu_id >", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdGreaterThanOrEqualTo(String value) {
            addCriterion("stu_id >=", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdLessThan(String value) {
            addCriterion("stu_id <", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdLessThanOrEqualTo(String value) {
            addCriterion("stu_id <=", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdLike(String value) {
            addCriterion("stu_id like", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotLike(String value) {
            addCriterion("stu_id not like", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdIn(List<String> values) {
            addCriterion("stu_id in", values, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotIn(List<String> values) {
            addCriterion("stu_id not in", values, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdBetween(String value1, String value2) {
            addCriterion("stu_id between", value1, value2, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotBetween(String value1, String value2) {
            addCriterion("stu_id not between", value1, value2, "stuId");
            return (Criteria) this;
        }

        public Criteria andTeaIdIsNull() {
            addCriterion("tea_id is null");
            return (Criteria) this;
        }

        public Criteria andTeaIdIsNotNull() {
            addCriterion("tea_id is not null");
            return (Criteria) this;
        }

        public Criteria andTeaIdEqualTo(String value) {
            addCriterion("tea_id =", value, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdNotEqualTo(String value) {
            addCriterion("tea_id <>", value, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdGreaterThan(String value) {
            addCriterion("tea_id >", value, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdGreaterThanOrEqualTo(String value) {
            addCriterion("tea_id >=", value, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdLessThan(String value) {
            addCriterion("tea_id <", value, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdLessThanOrEqualTo(String value) {
            addCriterion("tea_id <=", value, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdLike(String value) {
            addCriterion("tea_id like", value, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdNotLike(String value) {
            addCriterion("tea_id not like", value, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdIn(List<String> values) {
            addCriterion("tea_id in", values, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdNotIn(List<String> values) {
            addCriterion("tea_id not in", values, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdBetween(String value1, String value2) {
            addCriterion("tea_id between", value1, value2, "teaId");
            return (Criteria) this;
        }

        public Criteria andTeaIdNotBetween(String value1, String value2) {
            addCriterion("tea_id not between", value1, value2, "teaId");
            return (Criteria) this;
        }

        public Criteria andGroAIsNull() {
            addCriterion("gro_a is null");
            return (Criteria) this;
        }

        public Criteria andGroAIsNotNull() {
            addCriterion("gro_a is not null");
            return (Criteria) this;
        }

        public Criteria andGroAEqualTo(Integer value) {
            addCriterion("gro_a =", value, "groA");
            return (Criteria) this;
        }

        public Criteria andGroANotEqualTo(Integer value) {
            addCriterion("gro_a <>", value, "groA");
            return (Criteria) this;
        }

        public Criteria andGroAGreaterThan(Integer value) {
            addCriterion("gro_a >", value, "groA");
            return (Criteria) this;
        }

        public Criteria andGroAGreaterThanOrEqualTo(Integer value) {
            addCriterion("gro_a >=", value, "groA");
            return (Criteria) this;
        }

        public Criteria andGroALessThan(Integer value) {
            addCriterion("gro_a <", value, "groA");
            return (Criteria) this;
        }

        public Criteria andGroALessThanOrEqualTo(Integer value) {
            addCriterion("gro_a <=", value, "groA");
            return (Criteria) this;
        }

        public Criteria andGroAIn(List<Integer> values) {
            addCriterion("gro_a in", values, "groA");
            return (Criteria) this;
        }

        public Criteria andGroANotIn(List<Integer> values) {
            addCriterion("gro_a not in", values, "groA");
            return (Criteria) this;
        }

        public Criteria andGroABetween(Integer value1, Integer value2) {
            addCriterion("gro_a between", value1, value2, "groA");
            return (Criteria) this;
        }

        public Criteria andGroANotBetween(Integer value1, Integer value2) {
            addCriterion("gro_a not between", value1, value2, "groA");
            return (Criteria) this;
        }

        public Criteria andGroBIsNull() {
            addCriterion("gro_b is null");
            return (Criteria) this;
        }

        public Criteria andGroBIsNotNull() {
            addCriterion("gro_b is not null");
            return (Criteria) this;
        }

        public Criteria andGroBEqualTo(Integer value) {
            addCriterion("gro_b =", value, "groB");
            return (Criteria) this;
        }

        public Criteria andGroBNotEqualTo(Integer value) {
            addCriterion("gro_b <>", value, "groB");
            return (Criteria) this;
        }

        public Criteria andGroBGreaterThan(Integer value) {
            addCriterion("gro_b >", value, "groB");
            return (Criteria) this;
        }

        public Criteria andGroBGreaterThanOrEqualTo(Integer value) {
            addCriterion("gro_b >=", value, "groB");
            return (Criteria) this;
        }

        public Criteria andGroBLessThan(Integer value) {
            addCriterion("gro_b <", value, "groB");
            return (Criteria) this;
        }

        public Criteria andGroBLessThanOrEqualTo(Integer value) {
            addCriterion("gro_b <=", value, "groB");
            return (Criteria) this;
        }

        public Criteria andGroBIn(List<Integer> values) {
            addCriterion("gro_b in", values, "groB");
            return (Criteria) this;
        }

        public Criteria andGroBNotIn(List<Integer> values) {
            addCriterion("gro_b not in", values, "groB");
            return (Criteria) this;
        }

        public Criteria andGroBBetween(Integer value1, Integer value2) {
            addCriterion("gro_b between", value1, value2, "groB");
            return (Criteria) this;
        }

        public Criteria andGroBNotBetween(Integer value1, Integer value2) {
            addCriterion("gro_b not between", value1, value2, "groB");
            return (Criteria) this;
        }

        public Criteria andGroCIsNull() {
            addCriterion("gro_c is null");
            return (Criteria) this;
        }

        public Criteria andGroCIsNotNull() {
            addCriterion("gro_c is not null");
            return (Criteria) this;
        }

        public Criteria andGroCEqualTo(Integer value) {
            addCriterion("gro_c =", value, "groC");
            return (Criteria) this;
        }

        public Criteria andGroCNotEqualTo(Integer value) {
            addCriterion("gro_c <>", value, "groC");
            return (Criteria) this;
        }

        public Criteria andGroCGreaterThan(Integer value) {
            addCriterion("gro_c >", value, "groC");
            return (Criteria) this;
        }

        public Criteria andGroCGreaterThanOrEqualTo(Integer value) {
            addCriterion("gro_c >=", value, "groC");
            return (Criteria) this;
        }

        public Criteria andGroCLessThan(Integer value) {
            addCriterion("gro_c <", value, "groC");
            return (Criteria) this;
        }

        public Criteria andGroCLessThanOrEqualTo(Integer value) {
            addCriterion("gro_c <=", value, "groC");
            return (Criteria) this;
        }

        public Criteria andGroCIn(List<Integer> values) {
            addCriterion("gro_c in", values, "groC");
            return (Criteria) this;
        }

        public Criteria andGroCNotIn(List<Integer> values) {
            addCriterion("gro_c not in", values, "groC");
            return (Criteria) this;
        }

        public Criteria andGroCBetween(Integer value1, Integer value2) {
            addCriterion("gro_c between", value1, value2, "groC");
            return (Criteria) this;
        }

        public Criteria andGroCNotBetween(Integer value1, Integer value2) {
            addCriterion("gro_c not between", value1, value2, "groC");
            return (Criteria) this;
        }

        public Criteria andGroDIsNull() {
            addCriterion("gro_d is null");
            return (Criteria) this;
        }

        public Criteria andGroDIsNotNull() {
            addCriterion("gro_d is not null");
            return (Criteria) this;
        }

        public Criteria andGroDEqualTo(Integer value) {
            addCriterion("gro_d =", value, "groD");
            return (Criteria) this;
        }

        public Criteria andGroDNotEqualTo(Integer value) {
            addCriterion("gro_d <>", value, "groD");
            return (Criteria) this;
        }

        public Criteria andGroDGreaterThan(Integer value) {
            addCriterion("gro_d >", value, "groD");
            return (Criteria) this;
        }

        public Criteria andGroDGreaterThanOrEqualTo(Integer value) {
            addCriterion("gro_d >=", value, "groD");
            return (Criteria) this;
        }

        public Criteria andGroDLessThan(Integer value) {
            addCriterion("gro_d <", value, "groD");
            return (Criteria) this;
        }

        public Criteria andGroDLessThanOrEqualTo(Integer value) {
            addCriterion("gro_d <=", value, "groD");
            return (Criteria) this;
        }

        public Criteria andGroDIn(List<Integer> values) {
            addCriterion("gro_d in", values, "groD");
            return (Criteria) this;
        }

        public Criteria andGroDNotIn(List<Integer> values) {
            addCriterion("gro_d not in", values, "groD");
            return (Criteria) this;
        }

        public Criteria andGroDBetween(Integer value1, Integer value2) {
            addCriterion("gro_d between", value1, value2, "groD");
            return (Criteria) this;
        }

        public Criteria andGroDNotBetween(Integer value1, Integer value2) {
            addCriterion("gro_d not between", value1, value2, "groD");
            return (Criteria) this;
        }

        public Criteria andGroEIsNull() {
            addCriterion("gro_e is null");
            return (Criteria) this;
        }

        public Criteria andGroEIsNotNull() {
            addCriterion("gro_e is not null");
            return (Criteria) this;
        }

        public Criteria andGroEEqualTo(Integer value) {
            addCriterion("gro_e =", value, "groE");
            return (Criteria) this;
        }

        public Criteria andGroENotEqualTo(Integer value) {
            addCriterion("gro_e <>", value, "groE");
            return (Criteria) this;
        }

        public Criteria andGroEGreaterThan(Integer value) {
            addCriterion("gro_e >", value, "groE");
            return (Criteria) this;
        }

        public Criteria andGroEGreaterThanOrEqualTo(Integer value) {
            addCriterion("gro_e >=", value, "groE");
            return (Criteria) this;
        }

        public Criteria andGroELessThan(Integer value) {
            addCriterion("gro_e <", value, "groE");
            return (Criteria) this;
        }

        public Criteria andGroELessThanOrEqualTo(Integer value) {
            addCriterion("gro_e <=", value, "groE");
            return (Criteria) this;
        }

        public Criteria andGroEIn(List<Integer> values) {
            addCriterion("gro_e in", values, "groE");
            return (Criteria) this;
        }

        public Criteria andGroENotIn(List<Integer> values) {
            addCriterion("gro_e not in", values, "groE");
            return (Criteria) this;
        }

        public Criteria andGroEBetween(Integer value1, Integer value2) {
            addCriterion("gro_e between", value1, value2, "groE");
            return (Criteria) this;
        }

        public Criteria andGroENotBetween(Integer value1, Integer value2) {
            addCriterion("gro_e not between", value1, value2, "groE");
            return (Criteria) this;
        }

        public Criteria andGroFIsNull() {
            addCriterion("gro_f is null");
            return (Criteria) this;
        }

        public Criteria andGroFIsNotNull() {
            addCriterion("gro_f is not null");
            return (Criteria) this;
        }

        public Criteria andGroFEqualTo(Integer value) {
            addCriterion("gro_f =", value, "groF");
            return (Criteria) this;
        }

        public Criteria andGroFNotEqualTo(Integer value) {
            addCriterion("gro_f <>", value, "groF");
            return (Criteria) this;
        }

        public Criteria andGroFGreaterThan(Integer value) {
            addCriterion("gro_f >", value, "groF");
            return (Criteria) this;
        }

        public Criteria andGroFGreaterThanOrEqualTo(Integer value) {
            addCriterion("gro_f >=", value, "groF");
            return (Criteria) this;
        }

        public Criteria andGroFLessThan(Integer value) {
            addCriterion("gro_f <", value, "groF");
            return (Criteria) this;
        }

        public Criteria andGroFLessThanOrEqualTo(Integer value) {
            addCriterion("gro_f <=", value, "groF");
            return (Criteria) this;
        }

        public Criteria andGroFIn(List<Integer> values) {
            addCriterion("gro_f in", values, "groF");
            return (Criteria) this;
        }

        public Criteria andGroFNotIn(List<Integer> values) {
            addCriterion("gro_f not in", values, "groF");
            return (Criteria) this;
        }

        public Criteria andGroFBetween(Integer value1, Integer value2) {
            addCriterion("gro_f between", value1, value2, "groF");
            return (Criteria) this;
        }

        public Criteria andGroFNotBetween(Integer value1, Integer value2) {
            addCriterion("gro_f not between", value1, value2, "groF");
            return (Criteria) this;
        }

        public Criteria andGroGIsNull() {
            addCriterion("gro_g is null");
            return (Criteria) this;
        }

        public Criteria andGroGIsNotNull() {
            addCriterion("gro_g is not null");
            return (Criteria) this;
        }

        public Criteria andGroGEqualTo(Integer value) {
            addCriterion("gro_g =", value, "groG");
            return (Criteria) this;
        }

        public Criteria andGroGNotEqualTo(Integer value) {
            addCriterion("gro_g <>", value, "groG");
            return (Criteria) this;
        }

        public Criteria andGroGGreaterThan(Integer value) {
            addCriterion("gro_g >", value, "groG");
            return (Criteria) this;
        }

        public Criteria andGroGGreaterThanOrEqualTo(Integer value) {
            addCriterion("gro_g >=", value, "groG");
            return (Criteria) this;
        }

        public Criteria andGroGLessThan(Integer value) {
            addCriterion("gro_g <", value, "groG");
            return (Criteria) this;
        }

        public Criteria andGroGLessThanOrEqualTo(Integer value) {
            addCriterion("gro_g <=", value, "groG");
            return (Criteria) this;
        }

        public Criteria andGroGIn(List<Integer> values) {
            addCriterion("gro_g in", values, "groG");
            return (Criteria) this;
        }

        public Criteria andGroGNotIn(List<Integer> values) {
            addCriterion("gro_g not in", values, "groG");
            return (Criteria) this;
        }

        public Criteria andGroGBetween(Integer value1, Integer value2) {
            addCriterion("gro_g between", value1, value2, "groG");
            return (Criteria) this;
        }

        public Criteria andGroGNotBetween(Integer value1, Integer value2) {
            addCriterion("gro_g not between", value1, value2, "groG");
            return (Criteria) this;
        }

        public Criteria andGroHIsNull() {
            addCriterion("gro_h is null");
            return (Criteria) this;
        }

        public Criteria andGroHIsNotNull() {
            addCriterion("gro_h is not null");
            return (Criteria) this;
        }

        public Criteria andGroHEqualTo(Integer value) {
            addCriterion("gro_h =", value, "groH");
            return (Criteria) this;
        }

        public Criteria andGroHNotEqualTo(Integer value) {
            addCriterion("gro_h <>", value, "groH");
            return (Criteria) this;
        }

        public Criteria andGroHGreaterThan(Integer value) {
            addCriterion("gro_h >", value, "groH");
            return (Criteria) this;
        }

        public Criteria andGroHGreaterThanOrEqualTo(Integer value) {
            addCriterion("gro_h >=", value, "groH");
            return (Criteria) this;
        }

        public Criteria andGroHLessThan(Integer value) {
            addCriterion("gro_h <", value, "groH");
            return (Criteria) this;
        }

        public Criteria andGroHLessThanOrEqualTo(Integer value) {
            addCriterion("gro_h <=", value, "groH");
            return (Criteria) this;
        }

        public Criteria andGroHIn(List<Integer> values) {
            addCriterion("gro_h in", values, "groH");
            return (Criteria) this;
        }

        public Criteria andGroHNotIn(List<Integer> values) {
            addCriterion("gro_h not in", values, "groH");
            return (Criteria) this;
        }

        public Criteria andGroHBetween(Integer value1, Integer value2) {
            addCriterion("gro_h between", value1, value2, "groH");
            return (Criteria) this;
        }

        public Criteria andGroHNotBetween(Integer value1, Integer value2) {
            addCriterion("gro_h not between", value1, value2, "groH");
            return (Criteria) this;
        }

        public Criteria andBack9IsNull() {
            addCriterion("back9 is null");
            return (Criteria) this;
        }

        public Criteria andBack9IsNotNull() {
            addCriterion("back9 is not null");
            return (Criteria) this;
        }

        public Criteria andBack9EqualTo(Integer value) {
            addCriterion("back9 =", value, "back9");
            return (Criteria) this;
        }

        public Criteria andBack9NotEqualTo(Integer value) {
            addCriterion("back9 <>", value, "back9");
            return (Criteria) this;
        }

        public Criteria andBack9GreaterThan(Integer value) {
            addCriterion("back9 >", value, "back9");
            return (Criteria) this;
        }

        public Criteria andBack9GreaterThanOrEqualTo(Integer value) {
            addCriterion("back9 >=", value, "back9");
            return (Criteria) this;
        }

        public Criteria andBack9LessThan(Integer value) {
            addCriterion("back9 <", value, "back9");
            return (Criteria) this;
        }

        public Criteria andBack9LessThanOrEqualTo(Integer value) {
            addCriterion("back9 <=", value, "back9");
            return (Criteria) this;
        }

        public Criteria andBack9In(List<Integer> values) {
            addCriterion("back9 in", values, "back9");
            return (Criteria) this;
        }

        public Criteria andBack9NotIn(List<Integer> values) {
            addCriterion("back9 not in", values, "back9");
            return (Criteria) this;
        }

        public Criteria andBack9Between(Integer value1, Integer value2) {
            addCriterion("back9 between", value1, value2, "back9");
            return (Criteria) this;
        }

        public Criteria andBack9NotBetween(Integer value1, Integer value2) {
            addCriterion("back9 not between", value1, value2, "back9");
            return (Criteria) this;
        }

        public Criteria andBack10IsNull() {
            addCriterion("back10 is null");
            return (Criteria) this;
        }

        public Criteria andBack10IsNotNull() {
            addCriterion("back10 is not null");
            return (Criteria) this;
        }

        public Criteria andBack10EqualTo(Integer value) {
            addCriterion("back10 =", value, "back10");
            return (Criteria) this;
        }

        public Criteria andBack10NotEqualTo(Integer value) {
            addCriterion("back10 <>", value, "back10");
            return (Criteria) this;
        }

        public Criteria andBack10GreaterThan(Integer value) {
            addCriterion("back10 >", value, "back10");
            return (Criteria) this;
        }

        public Criteria andBack10GreaterThanOrEqualTo(Integer value) {
            addCriterion("back10 >=", value, "back10");
            return (Criteria) this;
        }

        public Criteria andBack10LessThan(Integer value) {
            addCriterion("back10 <", value, "back10");
            return (Criteria) this;
        }

        public Criteria andBack10LessThanOrEqualTo(Integer value) {
            addCriterion("back10 <=", value, "back10");
            return (Criteria) this;
        }

        public Criteria andBack10In(List<Integer> values) {
            addCriterion("back10 in", values, "back10");
            return (Criteria) this;
        }

        public Criteria andBack10NotIn(List<Integer> values) {
            addCriterion("back10 not in", values, "back10");
            return (Criteria) this;
        }

        public Criteria andBack10Between(Integer value1, Integer value2) {
            addCriterion("back10 between", value1, value2, "back10");
            return (Criteria) this;
        }

        public Criteria andBack10NotBetween(Integer value1, Integer value2) {
            addCriterion("back10 not between", value1, value2, "back10");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table groupmark
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table groupmark
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}